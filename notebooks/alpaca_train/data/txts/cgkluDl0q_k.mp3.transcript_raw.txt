 Oh, one of my favorite old chestnuts here, the old history of SQL Server topic.  Seems like I bet I tell this story, I don't know how many times a year, a lot.  So let's kind of walk through the SQL Server history here.  It's kind of a fun trip down memory lane for a lot of us.  So this all started back in the 1980s.  Back in 1989, Microsoft was a large software company.  They were no IBM at the time, but they were a very large software company.  But they had no database product, and they saw that as a problem.  Now you also had Ashton Tate.  Ashton Tate was another company, you're probably familiar with Dbase.  They were the makers of Dbase.  And so we have three players now, we have Sybase.  And Sybase had their data server, which was their new product as well.  So Microsoft, Ashton Tate, and Sybase.  Microsoft hooks up with Sybase.  And Microsoft says, hey, give us the source code to your database product.  And so Sybase did, they licensed the source code.  And they licensed it for Microsoft to release on OS2, not for Unix.  So licensed it for OS2 and for the other Microsoft-based operating systems,  which were fairly limited at the time.  That license gave the Microsoft developers access to the source code.  This is a key, key moment.  I think this was like 1988.  So Microsoft says, OK, boom, hammer it all out.  And really, Microsoft, I'm not sure how much  that they really changed in this very first release.  But the first version of SQL Server comes out in 1989.  And Microsoft said, you know what, this is not really our milieu.  Let's go to Ashton Tate.  They know how to market databases.  And let's get them to help us market this.  So that's actually the very first name of it here  was Ashton Tate Microsoft SQL Server version 1.0.  And it started shipping in 1989.  OK, fast forward, 1990, 1.1 comes out.  But it's no longer Ashton Tate.  It's just Microsoft SQL Server 1.1.  And look at that, Windows 3.0.  Some of us are still young enough to remember that,  old enough to remember that, whichever one that is.  All right, so this was 1990.  Several years go by, no new release from Microsoft.  During that time, so there's no version 2.  There's no version 3.  And during that time, Sybase is loving it.  They go public.  They have just this massive initial public offering on IPO.  They're doing great.  1992, SQL Server 4.21.  No 2.0, no 3.0.  Still licensed by Sybase, by or with,  whichever way you want to say that.  Talking 16-bit here with OS 2.  And then we actually start coming out with Windows NT  about this point.  So NT 3.1, we have 32-bit now.  Sweet.  OK, 1993.  All right, now the original license with Sybase  did not let Microsoft add or change features  without Sybase's approval.  Well, that's no fun, right?  So 1994, Microsoft has been able to recruit  a lot of really, really smart people, some away from Sybase.  And so they parted ways with Sybase.  And Microsoft felt that they could do it on their own.  So SQL 95, released in spring 95, technically 6.0.  But it kind of coincided with Windows 95, right?  Replication was the killer feature there.  And SQL Server was actually starting  to gain some momentum here.  They were not in any way shaking the trees,  like Oracle wasn't really scared of them.  But Microsoft is a growing company.  Windows 95 is coming out.  Windows NT 3.1, soon to be NT 4.0.  Lots of momentum behind this company.  SQL Server 6.5 comes out in 1996.  And we'll actually die.  So anyway, the short release cycle,  we really only had a very, very short period between 6.0  and 6.5 here.  This was simply pressure from other companies,  pressure from Oracle with new products and other companies  coming out.  And it was actually the first to be anti-standard compliant,  which you need to go back to course 170  if you're not quite familiar with what that is.  Now, this is still built on top of the old Sybase code.  So they're taking that old Sybase code  and changing it up a little bit.  But we had a lot of fun with this one.  You could backup tables here.  You had the data transfer manager.  You had a lot of fun back then.  All right, so SQL Server 7.0 comes out in 1998.  And this was mind-blowing.  So now, while we're on NT 4.0, everything's running 32-bit.  And SQL Server 7.0 comes out.  And it's gorgeous.  We have the Enterprise Manager.  We have data transformation services,  so much row-level locking, so much.  And we had OLAP services that came out as well.  All right, two years later, SQL Server 2.0.  You can see they're kind of starting  to get a pattern here of every six months to two years  we're coming out with some rev or some major version.  So SQL Server 2000, it was originally  just going to be somewhat of a minor update to 7.0,  but kind of ended up being much bigger than that,  more powerful.  And we start seeing right here that they are now  trying to tie in the SQL Server versions with the release  of an operating system.  As the operating system evolves, they kind of  tag on right next to it and say, OK, we're  going to release ours in conjunction  with this latest operating system  so that our customers can be right on top  of the latest technology.  And 2000 was the debut of Analysis Services.  And it was something like Service Pack 2 or 3  for SQL Server 2000 when Reporting Services made  its debut.  But we go five years until the next version of SQL Server.  Yuck.  This was not happy times in the server group.  This was the time when Microsoft from 2000 to 2001  kind of made that shift into Microsoft.net.  That shift delayed a lot of the server products  at Microsoft, and SQL Server was one of those.  So SQL 2005 made to work with Windows Server 2003.  And if you kind of remember, there was no Windows Server  2005.  We had to wait until Windows Server 2008.  So SQL Server 2005, because we had such a long release cycle,  massively different in the internals.  We now had to support .NET in the database.  So that's the SQL CLR.  Integration Services is now here.  No more Data Transformation Services.  Reporting Services is here.  Database Mirroring makes its debut.  Better XML data types, tighter XML integration.  We now have Schemas.  Ooh, interesting.  All right, so 2008, now here we go.  Windows Server 2008 and SQL Server 2008 debut.  SQL Server 2008 wasn't a massive difference from 2005.  But, I mean, a couple of things.  Transparent data encryption, policy management,  the geospatial data makes its debut.  File stream, backup, compression all comes in.  SQL Server 2008 R2 comes out in 2010.  Again, no surprise, built for a server.  Windows Server 2008 R2.  Now we get Master Data Services, Stream Insight,  Unicode compression, Power Pivot, some BI features.  Again, not a ton of new features.  Now here we are with 2012.  So this is, ta-da, coming with Windows Server 2012.  And they have the killer features,  always on availability groups.  The most exciting new feature, certainly, I  think, since Integration Services.  Column Store Indexes, which is pretty darn exciting  if you're working with relational data warehouses.  I love it.  User Defined Server Roles.  Oh, SQL Server 2014.  Yes, it's already announced.  It is built to go with Windows Server 2012 R2.  And it features in-memory OLTP.  So now we can have our tables don't even  worry about accessing the disk.  Our Column Store Indexes, we have the ability to update.  We have a little more evolution of those.  And we can now start doing a little more  on the hardware side to speed up our server with respect  to SSD drives.  So lots of fun stuff.  Hope you enjoyed the history.  I'll see you in Chapter 3. 